package main

import (
	"fmt"
	"sync"
)

func main() {
	m := [5]int{2, 4, 6, 8, 10}

	var wg sync.WaitGroup //Создаем группу ожидания (счетчик)
	wg.Add(len(m))        //указываем количество ожидаемых горутин

	ch := make(int, len(m)) // канал нужен для упорядочивания значений при отработке горутин, так как горутины вызываются не последовательно

	for i := 0; i < len(m); i++ {
		ch <- m[i]
		//запускаем горутины
		go func(ch <-chan int) {
			defer wg.Done()                                          //уменьшаем счетчик группы ожидания по окончанию работы горутин
			val := <- ch
			fmt.Printf("квадрат числа %d: %d\n", val, val*val) //выводим результат в os.stdout
		}(ch)
	}

	close(ch)

	wg.Wait() //ждем окончания выполнения всех горутин(счетчик равен 0)
}
