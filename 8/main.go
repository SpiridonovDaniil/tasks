package main

import (
	"fmt"
	"log"
)

func main() {
	fmt.Println("не забываем, что индексация битов начинается с 0")
	var n, i, b int64
	_, err := fmt.Scan(&n, &i, &b) //вводим число, индекс и значение бита.
	if err != nil {
		log.Fatalln(err)
	}

	if !(b == 0) && b != 1 {
		log.Fatalln("3 число - значения бита должно быть 1 или 0 ")
	}
	fmt.Printf("%b, %d", changeBit(i, b, n), changeBit(i, b, n))
}

func changeBit(i, b, num int64) int64 {
	if b == 0 {
		mask := ^(0b00000001 << i) //инициализируем маску с нулями и инвертировав ее.
		res := int64(mask) & num   //используем поразрядное умножение(возвращает 1, если оба из соответствующих разрядов обоих чисел равны 1. возвращает 0, если разряд хотя бы одного числа равен 0)
		return res
	} else {
		mask := 00000001 << i    //инициализируем маску с нулями.
		res := int64(mask) | num //используем поразрядное сложение(возвращает 1, если хотя бы один из соответствующих разрядов обоих чисел равен 1)
		return res
	}

}
